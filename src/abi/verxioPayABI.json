[
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "x",
				"type": "bytes32"
			},
			{
				"internalType": "bytes32",
				"name": "y",
				"type": "bytes32"
			},
			{
				"internalType": "bytes1",
				"name": "ss",
				"type": "bytes1"
			},
			{
				"internalType": "address",
				"name": "token",
				"type": "address"
			}
		],
		"name": "addSenderKey",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "renounceOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "x",
				"type": "bytes32"
			},
			{
				"internalType": "bytes32",
				"name": "y",
				"type": "bytes32"
			},
			{
				"internalType": "bytes1",
				"name": "ss",
				"type": "bytes1"
			},
			{
				"internalType": "address payable",
				"name": "target",
				"type": "address"
			}
		],
		"name": "sendAnonymously",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "previousOwner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "OwnershipTransferred",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "x",
				"type": "bytes32"
			},
			{
				"internalType": "bytes32",
				"name": "y",
				"type": "bytes32"
			},
			{
				"internalType": "bytes1",
				"name": "ss",
				"type": "bytes1"
			},
			{
				"internalType": "address",
				"name": "token",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "target",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "sendTokenAnonymously",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "start",
				"type": "uint256"
			}
		],
		"name": "getNextKeys",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bytes32",
						"name": "x",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "y",
						"type": "bytes32"
					},
					{
						"internalType": "bytes1",
						"name": "ss",
						"type": "bytes1"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"internalType": "struct VerxioPay.senderPublicKey[10]",
				"name": "",
				"type": "tuple[10]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "keys",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "x",
				"type": "bytes32"
			},
			{
				"internalType": "bytes32",
				"name": "y",
				"type": "bytes32"
			},
			{
				"internalType": "bytes1",
				"name": "ss",
				"type": "bytes1"
			},
			{
				"internalType": "address",
				"name": "token",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalKeys",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "count",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "VERSION",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]